(global["webpackJsonp"]=global["webpackJsonp"]||[]).push([["subpkg/pages/teacherlistbeifen/teacherlist"],{133:function(t,e,n){"use strict";(function(t){n(5);a(n(3));var e=a(n(134));function a(t){return t&&t.__esModule?t:{default:t}}wx.__webpack_require_UNI_MP_PLUGIN__=n,t(e.default)}).call(this,n(1)["createPage"])},134:function(t,e,n){"use strict";n.r(e);var a=n(135),o=n(137);for(var i in o)"default"!==i&&function(t){n.d(e,t,(function(){return o[t]}))}(i);n(139),n(141);var r,s=n(17),c=Object(s["default"])(o["default"],a["render"],a["staticRenderFns"],!1,null,"d8cf398c",null,!1,a["components"],r);c.options.__file="subpkg/pages/teacherlistbeifen/teacherlist.vue",e["default"]=c.exports},135:function(t,e,n){"use strict";n.r(e);var a=n(136);n.d(e,"render",(function(){return a["render"]})),n.d(e,"staticRenderFns",(function(){return a["staticRenderFns"]})),n.d(e,"recyclableRender",(function(){return a["recyclableRender"]})),n.d(e,"components",(function(){return a["components"]}))},136:function(t,e,n){"use strict";var a;n.r(e),n.d(e,"render",(function(){return o})),n.d(e,"staticRenderFns",(function(){return r})),n.d(e,"recyclableRender",(function(){return i})),n.d(e,"components",(function(){return a}));try{a={uNavbar:function(){return n.e("uview-ui/components/u-navbar/u-navbar").then(n.bind(null,366))},myTabs:function(){return n.e("components/my-tabs/my-tabs").then(n.bind(null,470))},uPopup:function(){return n.e("uview-ui/components/u-popup/u-popup").then(n.bind(null,433))},release:function(){return Promise.all([n.e("common/vendor"),n.e("components/release/release")]).then(n.bind(null,461))},dropball:function(){return n.e("components/dropball/dropball").then(n.bind(null,380))}}}catch(s){if(-1===s.message.indexOf("Cannot find module")||-1===s.message.indexOf(".vue"))throw s;console.error(s.message),console.error("1. 排查组件名称拼写是否正确"),console.error("2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"),console.error("3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件")}var o=function(){var t=this,e=t.$createElement;t._self._c},i=!1,r=[];o._withStripped=!0},137:function(t,e,n){"use strict";n.r(e);var a=n(138),o=n.n(a);for(var i in a)"default"!==i&&function(t){n.d(e,t,(function(){return a[t]}))}(i);e["default"]=o.a},138:function(t,e,n){"use strict";(function(t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=f(n(9)),o=n(12),i=f(n(81)),r=n(125),s=f(n(126)),c=f(n(127)),u=f(n(128)),l=f(n(103)),d=f(n(104)),h=n(67);function f(t){return t&&t.__esModule?t:{default:t}}function p(t,e,n,a,o,i,r){try{var s=t[i](r),c=s.value}catch(u){return void n(u)}s.done?e(c):Promise.resolve(c).then(a,o)}function m(t){return function(){var e=this,n=arguments;return new Promise((function(a,o){var i=t.apply(e,n);function r(t){p(i,a,o,r,s,"next",t)}function s(t){p(i,a,o,r,s,"throw",t)}r(void 0)}))}}function b(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function w(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?b(Object(n),!0).forEach((function(e){g(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function g(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var v=function(){n.e("components/audio/audioplay").then(function(){return resolve(n(389))}.bind(null,n)).catch(n.oe)},y=function(){n.e("components/my-tabs/my-tabs").then(function(){return resolve(n(470))}.bind(null,n)).catch(n.oe)},S=function(){n.e("components/dropball/dropball").then(function(){return resolve(n(380))}.bind(null,n)).catch(n.oe)},_={components:{myTabs:y,musicAudio:v,dropball:S},data:function(){return{titleList:["宣传片","专题片","有声小说"],viewList:[],pageDate:new Date,man:s.default,female:c.default,qi:c.default,sharePopShow:!1,checkeChat:!0,moreShow:!0,addbtnShow:!1,currentIndex:0,triggered:!1,defaultshow:!0,erweimaShow:!1,shareSow:!0,giveIndex:null,play:"https://www.peiyinstreet.com/guidang/play.png",playActive:"https://www.peiyinstreet.com/guidang/palyActive.png",woekslist:[],background:{backgroundColor:"#21283B"},woekslist1:[{name:"品牌广告",id:1},{name:"专题片",id:2},{name:"促销广告",id:3},{name:"纪录片",id:4},{name:"影视广告",id:5},{name:"影视广告",id:6}],barStyle:{backgroundColor:"#000000"},dataList:[],tabsList:[],tabsItem:[],audioList:[],caseData:[],current:0,modifyShow:!1,audioShow:!1,dataPlay:{url:""},itemList:[],submitShow:!1,dataObj:{teacher_id:"",service_id:"",status:1,filename:"",content_url_escape:"",work_id:null,avatar:"",nickname:"",offer_price:""},btnText:"按作品效果下单",collectShow:!1,firstItem:{},orderPromptShow:!1,operationItem:{},shouchang:l.default,yishouchang:d.default,avatarimageUrl:"",urlpath:""}},onLoad:function(e){this.cardId=e.id,this.dataObj.teacher_id=e.id,this.urlpath=e.url,t.showLoading({title:"加载中"}),this.getUnionid()},onShow:function(){this.shareSow=!0},computed:w({},(0,o.mapState)("user",["token","userInfo","order_status"])),onHide:function(){},onShareAppMessage:function(t){return"button"===t.from&&console.log(t.target),{title:"听一听这个配音师的声音，报价比市场价低一半",imageUrl:"",complete:function(t){console.log("分享成功",t)}}},onShareTimeline:function(t){return console.log("走这里了吗"),{title:"听下这个配音师的声音，报价比市场价低一半",imageUrl:this.avatarimageUrl,query:"id="+this.cardId+"&&url=index",complete:function(t){console.log("分享成功",t)}}},methods:w(w({},(0,o.mapActions)("user",["login","getIphoneStatus"])),{},{getUnionid:function(){var e=this;t.login({provider:"weixin",success:function(){var t=m(a.default.mark((function t(n){return a.default.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return t.next=2,e.login(n.code);case 2:return t.next=4,e.getIphoneStatus();case 4:e.woekslist=e.woekslist1,e.handleProfileDetail();case 6:case"end":return t.stop()}}),t)})));function n(e){return t.apply(this,arguments)}return n}(),fail:function(t){console.log("登录失败",t),e.woekslist=e.woekslist1,e.handleProfileDetail()}})},handleProfileDetail:function(){var e=this;(0,r.profileDetail)({id:this.cardId}).then((function(n){console.log("名片数据",n),e.dataList=n.data.data,e.avatarimageUrl=e.dataList.avatar;var a=n.data.list;e.caseData=n.data.case,t.hideLoading(),e.itemList=n.data.row,a.map((function(t){t.works.map((function(t){t.playStatus=!1}))})),console.log("传过来的值",a),e.tabsItem=e.$u.deepClone(a);var o=t.getStorageSync("current");""!==o?(e.tabsItem.map((function(t,n){t.tags[0].value===o&&(e.current=n)})),e.dataObj.service_id=e.tabsItem[e.current].id):e.dataObj.service_id=e.tabsItem[e.current].id,e.tabsList=a,0===e.tabsList.length?e.addbtnShow=!0:e.addbtnShow=!1}))},followFabuloulistData:function(){this.handleProfileDetail()},handleInviteDubbing:function(t){this.sharePopShow=!0},handleCanceShare:function(){this.sharePopShow=!1,this.erweimaShow=!1,t.showShareMenu({title:"配音师资源"})},handleShowQrcode:function(){this.erweimaShow=!0},handlecaseDetails:function(e){console.log("跳转到案例详情页面",e),t.navigateTo({url:"/subpkg/pages/caseDetails/caseDetails?id="+e.id})},handleGoBack:function(){"index"==this.urlpath?t.switchTab({url:"/pages/index/index"}):t.navigateBack({delta:1})},handleOperation:function(t){this.operationItem=t,console.log("点击操作打印数据---",t,this.operationItem),this.collectShow=!0},hanldeCancelcoll:function(){this.collectShow=!1},handleCollectStatus:function(){var t=this,e={work_id:this.operationItem.id,type:this.operationItem.work_type};(0,h.collection)(e).then((function(e){console.log(e),1===t.operationItem.work_type?t.operationItem.work_type=0:t.operationItem.work_type=1})).catch((function(t){}))},handleTakeBack:function(){this.moreShow=!this.moreShow},handleFocus:function(e,n){var a=this;(0,r.changeFocus)({teacher_id:e,type:n}).then((function(e){console.log(e),n?t.showToast({title:"取消关注成功",icon:"none",duration:2e3}):t.showToast({title:"关注成功",icon:"none",duration:2e3}),a.handleProfileDetail()})),console.log("关注点击事件")},handlefirstTimeUseOrder:function(t){this.firstItem=t,this.orderPromptShow=!0},handlejupumUseOrder:function(){this.handleUseOrder(this.firstItem),this.orderPromptShow=!1},handlecloseCoupons:function(){this.orderPromptShow=!1},handleUseOrder:function(e){console.log("使用样音下单service_id",e,e.id),e.admin_price?(this.dataObj.service_id=e.service_id,this.dataObj.teacher_id=e.teacher_id,this.dataObj.filename=e.title,this.dataObj.content_url_escape=e.url,this.dataObj.work_id=e.id,this.dataObj.avatar=this.dataList.avatar,this.dataObj.nickname=this.dataList.nickname,this.dataObj.offer_price=e.offer_price,this.btnText="按作品效果下单",t.setStorageSync("dataObj",this.dataObj),t.navigateTo({url:"/subpkg/pages/voicesrelease/voicesrelease"})):t.showToast({title:"该服务暂不支持在线下单，请联系客服",icon:"none"})},getsubmitShow:function(){this.submitShow=!1},change:function(t){this.current=t},handleruku:function(){t.previewImage({urls:["https://www.peiyinstreet.com/guidang/peiyinguwen.png"],longPressActions:{itemList:["发送给朋友","保存图片","收藏"],success:function(t){console.log("选中了第"+(t.tapIndex+1)+"个按钮,第"+(t.index+1)+"张图片")},fail:function(t){console.log(t.errMsg)}}})},playTheMusic:function(t){var e=this;this.audioShow=!0,this.dataPlay.url===t.url?this.tabsList.map((function(n){n.works.map((function(n){e.dataPlay===n?t.playStatus=!t.playStatus:n.playStatus=!1}))})):(this.tabsList.map((function(t){t.works.map((function(t){t.playStatus=!1}))})),t.playStatus=!0,this.dataPlay=t),setTimeout((function(){e.$refs.musicAudio.preStartPlay()}),0)},handleChangePlay:function(t){var e=this;this.tabsList.map((function(n){n.works.map((function(n){e.dataPlay===n?n.playStatus=t:n.playStatus=!1}))}))},downloadcopy:function(e,n){(0,i.default)({content:e,success:function(e){t.showToast({title:n,icon:"none",duration:2e3})},error:function(t){}})},musicClose:function(){this.tabsList.map((function(t){t.works.map((function(t){t.playStatus=!1}))})),this.audioShow=!1,this.dataPlay={url:""}},random:function(){var t=Math.floor(256*Math.random()),e=Math.floor(256*Math.random()),n=Math.floor(256*Math.random());return"rgb(".concat(t,",").concat(e,",").concat(n,")")},handleClick:function(e,n){var a=this,o={id:this.cardId,type:e};(0,r.followFabulous)(o).then((function(n){a.followFabuloulistData(),a.giveIndex=e;var o=a,i=["-",""],r=[u.default],s=Math.floor(Math.random()*r.length),c={src:r[s],back:a.random(),index:e,time:5e3,animationData:{},x:Math.ceil(50*Math.random()),q:Math.floor(Math.random()*i.length),lastIndex:1,timer:null,lastTime:100};new Date-a.pageDate<300||(a.pageDate=new Date,a.viewList.push(c),a.viewList.forEach((function(e,n,a){var r=t.createAnimation({duration:e.time,timingFunction:"ease-out"});o.animation=r;var s=i[e.q]+e.x;setTimeout((function(){o.animation.translateY(-100).step(),o.animation.opacity(0).step(),o.animation.translateX(Number(s)).step(),e.animationData=o.animation.export(),clearInterval(e.timer),e.timer=setInterval((function(){e.lastIndex--,e.lastIndex<0&&(a.splice(e,1),clearInterval(e.timer))}),e.lastTime)}),100)})))})).catch((function(e){t.showToast({title:e.errmsg,icon:"none",duration:2e3})}))}})};e.default=_}).call(this,n(1)["default"])},139:function(t,e,n){"use strict";n.r(e);var a=n(140),o=n.n(a);for(var i in a)"default"!==i&&function(t){n.d(e,t,(function(){return a[t]}))}(i);e["default"]=o.a},140:function(t,e,n){},141:function(t,e,n){"use strict";n.r(e);var a=n(142),o=n.n(a);for(var i in a)"default"!==i&&function(t){n.d(e,t,(function(){return a[t]}))}(i);e["default"]=o.a},142:function(t,e,n){}},[[133,"common/runtime","common/vendor"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,