(global["webpackJsonp"]=global["webpackJsonp"]||[]).push([["subpkg/pages/orderdetails/orderdetails"],{235:function(e,n,t){"use strict";(function(e){t(5);o(t(3));var n=o(t(236));function o(e){return e&&e.__esModule?e:{default:e}}wx.__webpack_require_UNI_MP_PLUGIN__=t,e(n.default)}).call(this,t(1)["createPage"])},236:function(e,n,t){"use strict";t.r(n);var o=t(237),r=t(239);for(var a in r)"default"!==a&&function(e){t.d(n,e,(function(){return r[e]}))}(a);t(241);var i,u=t(17),s=Object(u["default"])(r["default"],o["render"],o["staticRenderFns"],!1,null,null,null,!1,o["components"],i);s.options.__file="subpkg/pages/orderdetails/orderdetails.vue",n["default"]=s.exports},237:function(e,n,t){"use strict";t.r(n);var o=t(238);t.d(n,"render",(function(){return o["render"]})),t.d(n,"staticRenderFns",(function(){return o["staticRenderFns"]})),t.d(n,"recyclableRender",(function(){return o["recyclableRender"]})),t.d(n,"components",(function(){return o["components"]}))},238:function(e,n,t){"use strict";var o;t.r(n),t.d(n,"render",(function(){return r})),t.d(n,"staticRenderFns",(function(){return i})),t.d(n,"recyclableRender",(function(){return a})),t.d(n,"components",(function(){return o}));try{o={uNavbar:function(){return t.e("uview-ui/components/u-navbar/u-navbar").then(t.bind(null,366))},uCountDown:function(){return t.e("uview-ui/components/u-count-down/u-count-down").then(t.bind(null,419))},uPopup:function(){return t.e("uview-ui/components/u-popup/u-popup").then(t.bind(null,433))},release:function(){return Promise.all([t.e("common/vendor"),t.e("components/release/release")]).then(t.bind(null,461))},dropball:function(){return t.e("components/dropball/dropball").then(t.bind(null,380))}}}catch(u){if(-1===u.message.indexOf("Cannot find module")||-1===u.message.indexOf(".vue"))throw u;console.error(u.message),console.error("1. 排查组件名称拼写是否正确"),console.error("2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"),console.error("3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件")}var r=function(){var e=this,n=e.$createElement;e._self._c;e._isMounted||(e.e0=function(n){n.stopPropagation(),e.handleCloseSubmitShow})},a=!1,i=[];r._withStripped=!0},239:function(e,n,t){"use strict";t.r(n);var o=t(240),r=t.n(o);for(var a in o)"default"!==a&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=r.a},240:function(e,n,t){"use strict";(function(e){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(80),r=t(92),a=i(t(81));function i(e){return e&&e.__esModule?e:{default:e}}var u=function(){t.e("components/audio/audioplay").then(function(){return resolve(t(389))}.bind(null,t)).catch(t.oe)},s=function(){t.e("components/pyspopup/pyspopup").then(function(){return resolve(t(507))}.bind(null,t)).catch(t.oe)},c=function(){Promise.all([t.e("common/vendor"),t.e("components/release/release")]).then(function(){return resolve(t(461))}.bind(null,t)).catch(t.oe)},d=function(){t.e("components/dropball/dropball").then(function(){return resolve(t(380))}.bind(null,t)).catch(t.oe)},l={components:{musicAudio:u,pyspopuup:s,release:c,dropball:d},data:function(){return{background:{backgroundColor:"#FFFFFF"},type:"",play:"https://www.peiyinstreet.com/guidang/play.png",playActive:"https://www.peiyinstreet.com/guidang/palyActive.png",orderId:"",orderData:{},dataPlay:{url:""},current:"",audioShow:!1,notputShow:!1,demandProfile:{},submitShow:!1,submitShow1:!1}},onLoad:function(e){this.type=e.type,this.orderId=e.id,this.getOrderDetail(this.orderId)},onHide:function(){this.musicClose()},methods:{getOrderDetail:function(e){var n=this;(0,o.orderDetail)({order_id:e}).then((function(e){n.orderData=e.data,n.current=n.orderData.status}))},handleCheckdemand:function(){var e=this;(0,r.demandDetail)({demand_id:this.orderData.demand_id}).then((function(n){console.log("需求详情的数据---------",n),e.submitShow1=!0,e.demandProfile=n.data}))},handleruku:function(){e.previewImage({urls:["https://www.peiyinstreet.com/guidang/peiyinguwen.png"],longPressActions:{itemList:["发送给朋友","保存图片","收藏"],success:function(e){console.log("选中了第"+(e.tapIndex+1)+"个按钮,第"+(e.index+1)+"张图片")},fail:function(e){console.log(e.errMsg)}}})},hanldeOrderPay:function(n){var t=this;(0,r.orderPay)({order_id:n.order_id}).then((function(n){console.log("支付返回参数",n);var o=n.order_id,r=t;e.requestPayment({provider:"wxpay",timeStamp:n.data.timeStamp,nonceStr:n.data.nonceStr,package:n.data.package,signType:n.data.signType,paySign:n.data.paySign,success:function(e){console.log("success:"+JSON.stringify(e)),r.getOrderDetail(o)},fail:function(e){console.log("fail:"+JSON.stringify(e)),r.getOrderDetail(o)}})}))},handleCloseOrder:function(e){this.notputShow=!0},handleJumpdetails:function(n){console.log(n),0===n.cate||e.navigateTo({url:"/subpkg/pages/teacherlist/teacherlist?id="+n.teacher_id})},handleclose:function(){this.notputShow=!1},handleConfirm:function(){var e=this;(0,o.orderCancel)({order_id:this.orderData.id}).then((function(n){e.getOrderDetail(e.orderId),e.notputShow=!1}))},playTheMusic:function(e){var n=this;console.log("传过来的数据",e,this.orderData),this.audioShow=!0,this.orderData.work.playStatus=!this.orderData.work.playStatus,this.dataPlay=e,setTimeout((function(){n.$refs.musicAudio.preStartPlay()}),0)},handleChangePlay:function(e){this.orderData.work.playStatus=!this.orderData.work.playStatus},musicClose:function(){this.orderData.work.playStatus=!1,this.audioShow=!1,this.dataPlay={url:""}},handleCloseSubmitShow:function(){this.submitShow1=!1},downloadcopy:function(n,t){(0,a.default)({content:n,success:function(n){e.showToast({title:t,icon:"none"})},error:function(e){}})}}};n.default=l}).call(this,t(1)["default"])},241:function(e,n,t){"use strict";t.r(n);var o=t(242),r=t.n(o);for(var a in o)"default"!==a&&function(e){t.d(n,e,(function(){return o[e]}))}(a);n["default"]=r.a},242:function(e,n,t){}},[[235,"common/runtime","common/vendor"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,